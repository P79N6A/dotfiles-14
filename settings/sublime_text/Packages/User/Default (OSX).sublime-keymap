[
	{ "keys": ["f11"], "command": "sublime_simple_sync" },
	{
		"keys": ["super+alt+left"],
		"command": "focus_neighboring_group",
		"args": {
			"forward": false,
		},
	},
	{ "keys": ["super+alt+right"], "command": "focus_neighboring_group" },
	{ "keys": ["ctrl+shift+o"], "command": "open_url" },
	{
		"keys": ["ctrl+shift+m"],
		"command": "markdown_preview_select",
	},
	{
		"keys": ["super+backspace"],
		"command": "run_macro_file",
		"args": {
			"file": "res://Packages/Default/Delete Line.sublime-macro",
		},
	},
	{ "keys": ["super+shift+a"], "command": "prompt_add_folder" },
	{ "keys": ["super+shift+i"], "command": "install_package" },
	{ "keys": ["super+shift+u"], "command": "remove_package" },
	{
		"keys": ["super+shift+d"],
		"command": "run_macro_file",
		"args":
		{
			"file": "res://Packages/User/Macros/Duplicate Selected Lines.sublime-macro",
		},
		"context": [
			{
				"key": "setting.auto_match_enabled",
				"operator": "equal",
				"operand": true,
			},
			{
				"key": "selection_empty",
				"operator": "equal",
				"operand": false,
				"match_all": true,
			},
		],
	},
	{
		"keys": ["enter"],
		"command": "run_macro_file",
		"args":
		{
			"file": "res://Packages/Default/Add Line in Braces.sublime-macro",
		},
		"context":
		[
			{
				"key": "setting.auto_indent",
				"operator": "equal",
				"operand": true,
			},
			{
				"key": "selection_empty",
				"operator": "equal",
				"operand": true,
				"match_all": true,
			},
			{
				"key": "preceding_text",
				"operator": "regex_contains",
				"operand": "\\[$",
				"match_all": true,
			},
			{
				"key": "following_text",
				"operator": "regex_contains",
				"operand": "^\\]",
				"match_all": true,
			},
		],
	},
	{
		"keys": ["super+e"],
		"command": "expand_selection",
		"args": {
			"to": "brackets",
		},
	},
	{
		"keys": ["super+e"],
		"command": "expand_selection",
		"args": {
			"to": "tag",
		},
	},
	{ "keys": ["super+alt+tab"], "command": "reindent" },
	{
		"keys": ["-", ">"],
		"command": "insert_snippet",
		"args": {
			"contents": "â†’ $0",
		}
	},
	{
		"keys": ["alt+="],
		"command": "insert_snippet",
		"args": {
			"contents": "'+${1: ${2:$SELECTION} }+'$0",
		}
	},
	{
		"keys": ["alt+/"],
		"command": "insert_snippet",
		"args": {
			"contents": "/*${1: ${2:$SELECTION} }*/$0",
		}
	},
	{ "keys": ["super+o"], "command": "prompt_open_file_enhanced" },
	{ "keys": ["ctrl+r"], "command": "prompt_rename_file" },
	{
		"keys": ["ctrl+b"],
		"command": "expand_selection",
		"args": {
			"to": "brackets",
		},
	},
	{ "keys": ["alt+shift+s"], "command": "check_syntax" },
	{ "keys": ["alt+shift+r"], "command": "run_script" },
	{ "keys": ["alt+shift+t"], "command": "run_cake_task" },
	{ "keys": ["alt+shift+c"], "command": "compile" },
	{
		"keys": ["alt+shift+d"],
		"command": "compile_and_display",
		"args": {
			"opt": "-p",
		},
	},
	{
		"keys": ["alt+shift+x"],
		"command": "compile_and_display",
		"args": {
			"opt": "-t",
		},
	},
	{
		"keys": ["alt+shift+n"],
		"command": "compile_and_display",
		"args": {
			"opt": "-n",
		},
	},
	/* When inside double quotes */
	{
		"keys": ["ctrl+'"],
		"command": "split_word_to_characters",
		"args": {
			"contents": "${1:$SELECTION}$0",
			"quoted_double": false,
			"quoted_single": true,
		},
			/*
	    "context": [
				{ "key": "selection_empty", "operator": "not_equal", "operand": true, "match_all": true },
				{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "(\"|')$", "match_all": true },
				{ "key": "following_text", "operator": "not_regex_contains", "operand": "^(\"|')", "match_all": true },
				{ "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
				{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true },
			],
			*/
		},
		/* When inside single quotes */
		{
			"keys": ["ctrl+shift+'"],
			"command": "split_word_to_characters",
			"args": {
				"contents": "${1:$SELECTION}$0",
				"quoted_double": true,
				"quoted_single": false,
			},
			/*
	    "context": [
				{ "key": "selection_empty", "operator": "not_equal", "operand": true, "match_all": true },
				{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "(\"|')$", "match_all": true },
				{ "key": "following_text", "operator": "not_regex_contains", "operand": "^(\"|')", "match_all": true },
				{ "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
				{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true },
			],
			*/
		},
	{
		"keys": ["d", "e", "f", "a", "t"],
		"command": "insert_snippet",
		"args": {
			"contents": "${1:nopphasin.arayasirikul@gmail.com}$0",
		}
	},
	{
		"keys": ["g", "c", "t", "a", "t"],
		"command": "insert_snippet",
		"args": {
			"contents": "${1:goldfishcreative.thailand@gmail.com}$0",
		}
	},
	{
		"keys": ["a", "r", "t", "a", "t"],
		"command": "insert_snippet",
		"args": {
			"contents": "${1:fineartdeveloper@gmail.com}$0",
		}
	},
	{
		"keys": ["d", "e", "f", "n", "a", "m", "e" ],
		"command": "insert_snippet",
		"args": {
			"contents": "${1:Nopphasin Arayasirikul}$0",
		}
	},
	{
		"keys": ["g", "c", "t", "n", "a", "m", "e" ],
		"command": "insert_snippet",
		"args": {
			"contents": "${1:Goldfish Creative}$0",
		}
	},
	{
		"keys": ["a", "r", "t", "n", "a", "m", "e" ],
		"command": "insert_snippet",
		"args": {
			"contents": "${1:Fineart Developer}$0",
		}
	},
	{
		"keys": ["d", "e", "f", "u"],
		"command": "insert_snippet",
		"args": {
			"contents": "${1:nopphasinara}$0",
		}
	},
	{
		"keys": ["g", "c", "t", "u"],
		"command": "insert_snippet",
		"args": {
			"contents": "${1:gcreativeth}$0",
		}
	},
	{
		"keys": ["a", "r", "t", "u"],
		"command": "insert_snippet",
		"args": {
			"contents": "${1:fineartdeveloper}$0",
		}
	},

	{
    "keys": ["ctrl+shift+left"],
    "command": "move_tab",
    "args": { "position": "-1" }
  },
  {
    "keys": ["ctrl+shift+right"],
    "command": "move_tab",
    "args": { "position": "+1" }
  },

	{ "keys": ["alt+m"], "command": "noop" },
	{ "keys": ["super+ctrl+p"], "command": "noop" },
	{ "keys": ["super+alt+s"], "command": "noop" },
	{ "keys": ["super+ctrl+f"], "command": "noop" },
	{ "keys": ["super+k", "super+b"], "command": "noop" },
	{ "keys": ["super+ctrl+shift+f"], "command": "noop" },
]
