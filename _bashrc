#!/usr/bin/bash

alias ~="cd ~"
alias ls="ls -lhA"
alias la="ls -1"
alias cls="clear"
alias rel="clear && refresh_profile"
alias subl="open -a \"Sublime Text\""
alias ato="open -a \"Atom\""
alias apmi='apm install'
alias apmun='apm uninstall'
alias npmi='npm install'
alias npmig='npm -g install'
alias npmun='npm uninstall'
alias rename='mv -v'
alias h?='history | grep'

function hexdec() {
    local hex=`php -r '
    $foo = str_replace("#", "", "'$1'");
    if (strlen($foo) == 2) {
        $foo = "$foo$foo$foo";
    } elseif (strlen($foo) == 3) {
        $foo = "$foo$foo";
    } else {
        $foo = "$foo";
    }
    $foo = str_split($foo, 2);
    $result = array();
    foreach ($foo as $val) {
        $result[] = hexdec($val);
    }
    echo "rgb(". implode(", ", $result) .")";
    '`

    echo $hex
}

function refresh_profile() {
  source ~/.bash_profile
  source ~/.bashrc
  source ~/.exrc
}

function git_check() {
  local ps=

  if [[ -e "$PWD/.git" ]]; then
    local branch=`cat "$PWD/.git/HEAD" | perl -pe "s/ref\: refs\/heads\///g"`
    local ps=" ${FG_MAGENTA}${branch}${END_SGR} ${FG_GREEN}âœ“${END_SGR}"
    local status=`git status -s`

    if [[ -n $status ]]; then
      local ps=" ${FG_MAGENTA}${branch}${END_SGR} ${FG_RED}x${END_SGR}"
    fi
  fi

  export PS1="\n${FG_GREEN}\u${END_SGR} in ${FG_YELLOW}[\w]${END_SGR}${ps}\n${FG_MAGENTA}${FG_B}\$${END_SGR} "
}

function atom-push() {
  (cd ~/.atom && git add . && git commit -m "Update packages" && git push $*)
}
function bin-push() {
  (cd ~/.bin && git add . && git commit -m "Update packages" && git push $*)
}

function cdw() {
  local target=~/www/$*
  shift

  cd "${target}"
}
function cda() {
  local target=~/.atom/$*
  shift

  cd "${target}"
}
function cdb() {
  local target=~/.bin/$*
  shift

  cd "${target}"
}
function cdp() {
  local target=~/Projects/$*
  shift

  cd "${target}"
}

function take() {
  if [[ -z "$1" ]]; then
    echo "usage: xxx - target"
    return 0
  fi

  local target="`PWD`/$1"
  shift

  if [[ -e "$target" ]]; then
    echo "Directory \"$target\" exists"
    return 0
  fi

  mkdir "$target" && cd "$target"

  return 1
}