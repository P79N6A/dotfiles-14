#!/bin/bash

__IS_ROOT="";
__IS_SSH="";

__IS_GIT="";
git_status="";
git_branch="";
github="";

__prompt() {
  ## Highlight the user name when logged in as root.
  if [[ $USER = "root" ]]; then
    __IS_ROOT="1";
  fi
  export __IS_ROOT;

  ## Highlight the hostname when connected via SSH.
  if [[ $SSH_TTY ]]; then
    __IS_SSH="1";
  fi
  export __IS_SSH;

  __update_prompt;
}

__update_github() {
  # __IS_GIT="";
  # git_status="";
  # git_branch="";
  # github="";
  #
  # status="";
  # branch="";
  #
  # # Check if the current directory is in a Git repository.
  # if [[ `git rev-parse --is-inside-work-tree &> /dev/null; echo "${?}"` = "0" ]]; then
  #   __IS_GIT="1";
  #
  #   # check if the current directory is in .git before running git checks
  #   if [[ `git rev-parse --is-inside-git-dir 2> /dev/null` = "false" ]]; then
  #     # Ensure the index is up to date.
  #     git update-index --really-refresh -q &>/dev/null;
  #
  #     # Check for uncommitted changes in the index.
  #     [[ `git diff --quiet --ignore-submodules --cached` ]] && status+="+";
  #
  #     # Check for unstaged changes.
  #     [[ `git diff-files --quiet --ignore-submodules --` ]] && status+="!";
  #
  #     # Check for untracked files.
  #     [[ -n `git ls-files --others --exclude-standard` ]] && status+="?";
  #
  #     # Check for stashed files.
  #     [[ `git rev-parse --verify refs/stash &> /dev/null` ]] && status+="$";
  #   fi
  #
  #   # Get the short symbolic ref.
  #   # If HEAD isnâ€™t a symbolic ref, get the short SHA for the latest commit
  #   # Otherwise, just give up.
  #   branch="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || git rev-parse --short HEAD 2> /dev/null || echo '(unknown)')";
  #
  #   [[ -n "${status}" ]] && status=" ${status}";
  #
  #   git_status="${status} ";
  #   git_branch="${branch}";
  # fi
}

__update_prompt() {
  __update_github;

  ## Set user style
  user_style="${magenta}${b}";
  [[ $__IS_ROOT ]] && user_style="${red}${b}";
  ## Set host style
  host_style="${blue}${b}";
  [[ $__IS_SSH ]] && host_style="${yellow}${b}";

  user="${user_style}\u${re}";
  host=" at ${host_style}\h${re}";
  dir=" in ${green}${b}[\w]${re}";
  github="";
  if [[ $__IS_GIT ]]; then
    github=" ${git_branch} ${git_status}";
  fi

  PS1="${user}${host}${dir}${github}";
  PS1+="\n";
  PS1+="$ ";
  export PS1;

  PS2="-> ";
  export PS2;
}

PROMPT_COMMAND="__prompt; history -a";
export PROMPT_COMMAND;
