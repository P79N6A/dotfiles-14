#!/bin/bash

take() {
  if [[ $# = "0" || $# > "2" ]]; then
    __return "
    command: `basename $0`
    usage: [-q] directory
  "; exit 1;
  fi

  local is_cd="";
  local target="";
  for i in $*; do
    if [[ $i = "-q" ]]; then
      is_cd="$i";
    else
      target="$i";
    fi
  done

  if [[ -e "$target" ]]; then
    __return "
    ERROR: This directory \"$target\" already exists
  "; exit 1;
  else
    mkdir -p "$target";

    if [[ $is_cd = "-q" ]]; then
      complete 0;
    else
      cd "$target";
    fi
  fi
}


create() {
  if [[ $# = "0" || $# > "2" ]]; then
    __return "
    command: `basename $0`
    usage: [-q] file
  "; exit 1;
  fi

  local is_open="";
  local target="";
  for i in $*; do
    if [[ $i = "-q" ]]; then
      is_open="$i";
    else
      target="$i";
    fi
  done

  if [[ -e "$target" ]]; then
    __return "
    ERROR: This file \"$target\" already exists
  "; exit 1;
  else
    echo '' > "$target";

    if [[ $is_open = "-q" ]]; then
      complete 0;
    else
      open -a "Sublime Text" "$target";
    fi
  fi
}

vagrant-reload() {
  (cd "$HOME/Homestead" && vagrant reload --provision);
}

v() {
  (cd "$HOME/Homestead" && vagrant $*);
}

gitinit() {
  if [[ $# = 0 ]]; then
    __return "
  command: `basename $0`
  usage: url [user] [email]
"; exit 1;
  fi

  local url user email

  url="$1"; shift
  user='nopphasinara'
  email='nopphasin.arayasirikul@gmail.com'


  if [[ -n $1 ]]; then
    user="$1"; shift
  fi

  if [[ -n $1 ]]; then
    email="$1"; shift
  fi

  git init
  git remote add origin -f "$url"
  git config user.name "$user"
  git config user.email "$email"
  git config branch.master.remote origin
  git config branch.master.merge refs/heads/master

  echo -e "${green}Successful${re}"
}

gitclone() {
  local repo
  local target
  local is_url
  local url

  args=()
  for argv in $*; do
    is_url="$(echo $argv | grep -E '^--url=' -o)"
    if [[ -n $is_url ]]; then
      url="$(echo $argv | perl -pe 's/--url=//g')"
    else
      args+=($argv)
    fi
  done

  [[ -n "$argv[0]" ]] && repo="${argv[0]}"
  [[ -n "$argv[1]" ]] && target="${argv[1]}"
  [[ $url = '' ]] && url="git@github.com:${repo}"

  git clone $url $target
}
