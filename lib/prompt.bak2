#!/bin/bash

__IS_ROOT="";
__IS_SSH="";

__IS_GIT="";
git_status="";
git_branch="";
github="";

__prompt() {
  ## Highlight the user name when logged in as root.
  if [[ $USER = "root" ]]; then
    __IS_ROOT="1";
  fi
  export __IS_ROOT;

  ## Highlight the hostname when connected via SSH.
  if [[ $SSH_TTY ]]; then
    __IS_SSH="1";
  fi
  export __IS_SSH;

  __update_prompt;
}

__update_github() {
  __IS_GIT="";
  git_branch="";
  git_status="";

  [[ -x "$(which git)" ]] || return;

  local git_eng="env LANG=C git";

  # get current branch name or short SHA1 hash for detached head
  local branch="$($git_eng symbolic-ref --short HEAD 2>/dev/null || $git_eng describe --tags --always 2>/dev/null)";
  [[ -n "$branch" ]] || return;

  __IS_GIT="1";
  local marks

  # branch is modified?
  [[ -n "$($git_eng status --porcelain)" ]] && marks+=" $GIT_BRANCH_CHANGED_SYMBOL";

  # how many commits local branch is ahead/behind of remote?
  local stat="$($git_eng status --porcelain --branch | grep '^##' | grep -o '\[.\+\]$')";
  local aheadN="$(echo $stat | grep -o 'ahead [[:digit:]]\+' | grep -o '[[:digit:]]\+')";
  local behindN="$(echo $stat | grep -o 'behind [[:digit:]]\+' | grep -o '[[:digit:]]\+')";
  [[ -n "$aheadN" ]] && marks+=" $GIT_NEED_PUSH_SYMBOL$aheadN";
  [[ -n "$behindN" ]] && marks+=" $GIT_NEED_PULL_SYMBOL$behindN";

  # print the git branch segment without a trailing newline
  printf " $GIT_BRANCH_SYMBOL$branch$marks ";
}

__update_prompt() {
  ## Set user style
  user_style="${magenta}${b}";
  [[ $__IS_ROOT = "1" ]] && user_style="${red}${b}";
  ## Set host style
  host_style="${blue}${b}";
  [[ $__IS_SSH = "1" ]] && host_style="${yellow}${b}";

  user="${user_style}\u${re}";
  host=" at ${host_style}\h${re}";
  dir=" in ${green}${b}[\w]${re}";
  github="";
  if [[ $__IS_GIT = "1" ]]; then
    github="\$(__update_github)";
  fi

  PS1="${user}${host}${dir}${github}";
  PS1+="\n";
  PS1+="$ ";
  export PS1;

  PS2="-> ";
  export PS2;
}

PROMPT_COMMAND="__prompt; history -a";
export PROMPT_COMMAND;
